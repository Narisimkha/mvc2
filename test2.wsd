' Классы, интерфейсы, абстрактные классы и тд.
@startuml
abstract          abstract
abstract class    "abstract class"
annotation        annotation
circle            circle
()                circle_short_form
class             class   
diamond           diamond      
<>                diamond_short_form
entity            entity
enum              enum
interface         interface
@enduml

'2 Взаимосвязи между классами
@startuml
Class01 <|-- Class02
Class03 *-- Class04
Class05 o-- Class06
Class07 .. Class08
Class09 -- Class10
@enduml

@startuml
Class11 <|.. Class12
Class13 --> Class14
Class15 ..> Class16
Class17 ..|> Class18
Class19 <--* Class20
@enduml 

'4 Взаимосвязи и метки
@startuml
Class21 #-- Class22
Class23 x-- Class24
Class25 }-- Class26
Class27 +-- Class28
Class29 ^-- Class30
@enduml

@startuml
Class01 "к одному" *-- "от многих" Class02 : композиция
Class03 o-- Class04 : агрегация
Class05 --> "1" Class06
@enduml

@startuml
class Машина

Водитель - Машина: ведет >
Машина *- Колесо: имеет 4 >
Машина -- Персонаж: < владеет
@enduml

'7 Методы в классе
@startuml
Object <-- ArrayList

Object : equals(|)
ArrayList : Object[] elementData
ArrayList : size()
@enduml

@startuml
class Dummy {
    String data
    void methods()
}
@enduml

'9 Указание доступа в полях/методах класса
@startuml
class Dummy {
    -field1
    #field2
    ~method1()
    +method2()
}
@enduml

@startuml
class Dummy {
    {static} String id
    {abstract} void methods()
}
@enduml

'11 Заметки шаблоны

@startuml
class Object << general >>
Object <|--- ArrayList
note top of Object : In java, every class\nextends this one.

note "This is a floating note" as N1
note "This note is connected\nto several objects." as N2
Object .. N2
N2 .. ArrayList
class Foo
note left: On last defined class
@enduml


'почему, НЕ ПОЙМУ!!!

@startuml
class Object << general>>
Object <|--- ArrayList

note top of Object : In java, every class\nextends this one.
note "Это не привязанная\nни к чему заметка"  as №1
note "Эта заметка привязана\nсразу к нескольким классам" as №2
Object .. №2
№2 .. ArrayList

class Foo
note left: Эта заметка будет\nпривязана к последнему\nопределенному классу
@enduml

@startuml
class A {
    {static} int counter
    +void {abstract} start(int timeout)
}
note right of A::counter
  Это поле данных прокоментированно
end note 
note right of A::start
  Этот метод теперь объясняется в UML заметке
end note
@enduml

@startuml
class Dummy
Dummy --> Foo : Одна связь
note on link #red: Помни, оно - красное!

Dummy --> Foo2 : Другая связь
note right on link #LightBlue
Это моя заметка, чтобы не забыть где правильная связь.
И еще, она - почти синяя
end note
@enduml

'14 Абстрактные факты/интерфейсы
@startuml 
abstract class AbstractList
abstract AbstractCollection
interface list
interface Collection

List <|-- AbstractList
Collection <|-- AbstractCollection

Collection <|- List
AbstractCollection <|- AbstractList
AbstractList <|--ArrayList

class Arraylist {
    Object[] elementData
    size()
}

enum TimeUnit {
    DAYS
    HOURS
    MINUTES
}

annotation SuppressWarnings

annotation annotation {
    annotation with members
    String foo()
    String bar()
}
@enduml

'15 Пакеты классов
@startuml
package "Classis Collections" #CCCCCC {
    Object <|-- ArrayList
}
package net.sourceforge.plantuml {
    Object <|-- Demo1
    Demo1 *- Demo2
}
@enduml

@startuml
scale 750 width
package foo1 <<Node>> {
    class Class1
}
package foo2 <<Rectangle>> {
    class Class2
}
package foo3 <<Folder>> {
    class Class3
}
package foo4 <<Frame>> {
    class Class4
}
package foo5 <<Cloud>> {
    class Class5
}
package foo6 <<Database>> {
    class Class6
}
@enduml

'17 Изменение направления стрелок
@startuml
Пользователь -left-> Лево
Пользователь -right-> Право
Пользователь -up->Верх
Пользователь -down-> Низ
@enduml

@startuml
left to right direction
Пользователь -left-> Лево
Пользователь -right-> Право
Пользователь -up->Верх
Пользователь -down-> Низ
@enduml

'18 Оформление
@startuml
' задаем параметры для сех классов по умолчанию
skinparam class {
    ' задаем светлозеленый цвет для фона классов по умолчанию
    BackgroundColor lightGreen
    ' задаем синий цвет для связей классов по умолчанию
    ArrowColor Blue
' задаем красный цвет для контуров классов по умолчанию
BorderColor Red
}
' задаем цвет кружочков внутри элементов по умолчанию
skinparam StereotypeCBackgroundColor Magenta

Class01 "к одному" *-- "от многих" Class02 : композиция
Class03 o-- Class04 : агрегация
@enduml

@startuml
' задаем параметры для сех классов по умолчанию
skinparam class {
    ' задаем светлозеленый цвет для фона классов по умолчанию
    BackgroundColor lightGreen
    ' задаем синий цвет для связей классов по умолчанию 
    ArrowColor Blue
    ' задаем красный цвет для контуров классов по умолчанию
    BorderColor  Red
    ' задаем зеленый цвет для фона классов, для которых шаблоном является Foo
    BackgroundColor<<Foo>> Green
    ' задаем оранжевый цвет для контуров классов, для которых шаблоном является Foo 
    BackgroundColor<<Foo>> Orange
}
' задаем розовый цвет кружочков внутри элементов по умолчанию 
skinparam stereotypeCBackgroundColor Magenta
' задаем серый цвет кружочков внутри элементов, для которых шаблоном является Foo
skinparam stereotypeCBackgroundColor<< Foo >> Gray

Class01 <<Foo>>
Class03 <<Foo>>

Class01 "к одному" *-- "от многих" Class02 : композиция
Class03 o-- Class04 : агрегация
@enduml

@startuml

skinparam backgroundColor AntiqueWhite/Gold
skinparam classBackgroundColor Wheat|CornflowerBlue

class Foo #red-lightgreen 
note left of Foo #lightblue\9932CC
  это моя заметка
  об этом классе
end note 

package Пример #GreenYellow/LightGoldenRodYellow {
  class Заглушка
}
@enduml

'22 Наследование, имплементация
@startuml
class ArrayList implements List
class ArrayList extends abstractList
@enduml

'23 Стиль линий 
@startuml
title Cинтаксис квадратных скобочек без заметок
class foo
class bar
bar1 : [bold]
bar2 : [dashed]
bar3 : [dotted]
bar4 : [hidden]
bar5 : [plain]

foo --> bar
foo -[bold]-> bar1
foo -[dashed]-> bar2
foo -[dotted]-> bar3
foo -[hidden]-> bar4
foo -[plain]-> bar5
@enduml

@startuml
title @startuml
title Задание толщины при помощи синтаксиса квадратных скобочек
class foo
class bar
bar1 : [bold]
bar2 : [dashed]
bar3 : [dotted]
bar4 : [hidden]
bar5 : [plain]
foo --> bar          : по умолчанию
foo -[bold]-> bar1   : [жирный]
foo -[dashed]-> bar2 : [штриховой]
foo -[dotted]-> bar3 : [пунктирный]
foo -[hidden]-> bar4 : [скрытый]
foo -[plain]-> bar5  : [непрерывный]
@endum


@startuml
title Задание цвета при помощи синтаксиса квадратных скобочек
class foo
class bar
bar1 : [#red]
bar2 : [#green]
bar3 : [#blue]
foo --> bar          : обычный
foo -[#red]-> bar1   : [#красный]
foo -[#green]-> bar2 : [#зеленый]
foo -[#blue]-> bar3  : [#синий]
'foo -[#blue;#yellow;#green]-> bar4
@enduml

@startuml
title Задание толщины при помощи синтаксиса квадратных скобочек
class foo
class bar
bar1 : [thickness=1]
bar2 : [thickness=2]
bar3 : [thickness=4]
bar4 : [thickness=8]
bar5 : [thickness=16]
foo --> bar                : обычный
foo -[thickness=1]-> bar1  : [1]
foo -[thickness=2]-> bar2  : [2]
foo -[thickness=4]-> bar3  : [4]
foo -[thickness=8]-> bar4  : [8]
foo -[thickness=16]-> bar5 : [16]
@endum


@startuml
class foo
foo --> bar  : обычная
foo --> bar1 #line:red;line.bold;text:red  : красный, жирный
foo --> bar2 #green;line.dashed;text:green : зеленый, штриховой
foo --> bar3 #blue;line.dotted;text:blue   : синий, пунктирный
@endum

'28 Связи
@startuml
class Foo {
+ field1
+ field2
}
class Bar {
+ field3
+ field4
}
Foo::field1 --> Bar::field3 : foo
Foo::field2 --> Bar::field4 : bar
@enduml

@startuml
skinparam groupInheritance 1
A1 <|-- B1

A2 <|-- B2
A2 <|-- C2

A3 <|-- B3
A3 <|-- C3
A3 <|-- D3

A4 <|-- B4
A4 <|-- C4
A4 <|-- D4
A4 <|-- E4
@enduml

@startuml
skinparam groupInheritance 4
A1 <|-- B1

A2 <|-- B2
A2 <|-- C2

A3 <|-- B3
A3 <|-- C3
A3 <|-- D3

A4 <|-- B4
A4 <|-- C4
A4 <|-- D4
A4 <|-- E4

@enduml















'Стиль линий